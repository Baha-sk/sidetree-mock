// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "github.com/trustbloc/sidetree-mock/models"
)

// GetDocumentDidOrDidDocumentOKCode is the HTTP code returned for type GetDocumentDidOrDidDocumentOK
const GetDocumentDidOrDidDocumentOKCode int = 200

/*GetDocumentDidOrDidDocumentOK Returns the did document

swagger:response getDocumentDidOrDidDocumentOK
*/
type GetDocumentDidOrDidDocumentOK struct {

	/*
	  In: Body
	*/
	Payload *models.Response `json:"body,omitempty"`
}

// NewGetDocumentDidOrDidDocumentOK creates GetDocumentDidOrDidDocumentOK with default headers values
func NewGetDocumentDidOrDidDocumentOK() *GetDocumentDidOrDidDocumentOK {

	return &GetDocumentDidOrDidDocumentOK{}
}

// WithPayload adds the payload to the get document did or did document o k response
func (o *GetDocumentDidOrDidDocumentOK) WithPayload(payload *models.Response) *GetDocumentDidOrDidDocumentOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get document did or did document o k response
func (o *GetDocumentDidOrDidDocumentOK) SetPayload(payload *models.Response) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetDocumentDidOrDidDocumentOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetDocumentDidOrDidDocumentBadRequestCode is the HTTP code returned for type GetDocumentDidOrDidDocumentBadRequest
const GetDocumentDidOrDidDocumentBadRequestCode int = 400

/*GetDocumentDidOrDidDocumentBadRequest Bad Request

swagger:response getDocumentDidOrDidDocumentBadRequest
*/
type GetDocumentDidOrDidDocumentBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetDocumentDidOrDidDocumentBadRequest creates GetDocumentDidOrDidDocumentBadRequest with default headers values
func NewGetDocumentDidOrDidDocumentBadRequest() *GetDocumentDidOrDidDocumentBadRequest {

	return &GetDocumentDidOrDidDocumentBadRequest{}
}

// WithPayload adds the payload to the get document did or did document bad request response
func (o *GetDocumentDidOrDidDocumentBadRequest) WithPayload(payload *models.Error) *GetDocumentDidOrDidDocumentBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get document did or did document bad request response
func (o *GetDocumentDidOrDidDocumentBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetDocumentDidOrDidDocumentBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetDocumentDidOrDidDocumentNotFoundCode is the HTTP code returned for type GetDocumentDidOrDidDocumentNotFound
const GetDocumentDidOrDidDocumentNotFoundCode int = 404

/*GetDocumentDidOrDidDocumentNotFound Not found

swagger:response getDocumentDidOrDidDocumentNotFound
*/
type GetDocumentDidOrDidDocumentNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetDocumentDidOrDidDocumentNotFound creates GetDocumentDidOrDidDocumentNotFound with default headers values
func NewGetDocumentDidOrDidDocumentNotFound() *GetDocumentDidOrDidDocumentNotFound {

	return &GetDocumentDidOrDidDocumentNotFound{}
}

// WithPayload adds the payload to the get document did or did document not found response
func (o *GetDocumentDidOrDidDocumentNotFound) WithPayload(payload *models.Error) *GetDocumentDidOrDidDocumentNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get document did or did document not found response
func (o *GetDocumentDidOrDidDocumentNotFound) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetDocumentDidOrDidDocumentNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetDocumentDidOrDidDocumentInternalServerErrorCode is the HTTP code returned for type GetDocumentDidOrDidDocumentInternalServerError
const GetDocumentDidOrDidDocumentInternalServerErrorCode int = 500

/*GetDocumentDidOrDidDocumentInternalServerError Internal server error

swagger:response getDocumentDidOrDidDocumentInternalServerError
*/
type GetDocumentDidOrDidDocumentInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetDocumentDidOrDidDocumentInternalServerError creates GetDocumentDidOrDidDocumentInternalServerError with default headers values
func NewGetDocumentDidOrDidDocumentInternalServerError() *GetDocumentDidOrDidDocumentInternalServerError {

	return &GetDocumentDidOrDidDocumentInternalServerError{}
}

// WithPayload adds the payload to the get document did or did document internal server error response
func (o *GetDocumentDidOrDidDocumentInternalServerError) WithPayload(payload *models.Error) *GetDocumentDidOrDidDocumentInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get document did or did document internal server error response
func (o *GetDocumentDidOrDidDocumentInternalServerError) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetDocumentDidOrDidDocumentInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
